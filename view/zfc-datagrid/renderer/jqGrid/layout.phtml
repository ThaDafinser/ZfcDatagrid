<?php 
use ZfcDatagrid\Column\Action\Button;

$parameterNames = $this->optionsRenderer['parameterNames'];

// $sortColumns = explode(',', $this->activeParameters[$parameterNames['sortColumns']]);
// $sortDirections = explode(',', $this->activeParameters[$parameterNames['sortDirections']]);

// $sortDirection = strtolower(array_pop($sortDirections));
// $sortBys = array();
// foreach($sortColumns as $key => $value){
//     $sortBy = $value;
//     if(isset($sortDirections[$key]))
//         $sortBy .= ' '.strtolower($sortDirections[$key]);
    
//     $sortBys[] = $sortBy;
// }
// $sortBys = implode(', ', $sortBys);

$url = $this->url(null, array(), array(), true);
if($this->overwriteUrl != ''){
    $url = $this->overwriteUrl;
}
$parametersHtml = array();
foreach($this->parameters as $name => $value){
    $parametersHtml []= $name.': \''.$value.'\'';
}

$tableClasses = array();

$rowClickLink = '';
if($this->rowClickAction){
    $tableClasses[] = 'clickable';
    
    $rowClickLink = $this->rowClickAction->getLink();
    if(count($this->rowClickAction->getLinkColumnPlaceholders()) > 0){
        throw new \Exception('Currently the row click action cannot bet used with Column parameters, except the rowId...');
    }
}
?>

<?php echo $this->partial($this->templateToolbar);?>

<table id="<?php echo $this->gridId; ?>" class="<?php echo implode(' ', $tableClasses); ?>"></table>
<div id="<?php echo $this->gridId; ?>_pager"></div>
<iframe name="<?php echo $this->gridId; ?>_fileFrame" id="<?php echo $this->gridId; ?>_fileFrame" src="about:none" style="display: none;"></iframe>

<input type="hidden" id="<?php echo $this->gridId.'_'.$parameterNames['columnsHidden']; ?>" name="<?php echo $this->gridId.'_'.$parameterNames['columnsHidden']; ?>" value="<?php echo implode(',',$this->columnsHidden); ?>" />
<input type="hidden" id="<?php echo $this->gridId.'_'.$parameterNames['columnsGroupByLocal']; ?>" name="<?php echo $this->gridId.'_'.$parameterNames['columnsGroupByLocal']; ?>" value="" />

<script>
var grid_<?php echo $this->gridId; ?>_columnsRowClickDisabled = <?php echo json_encode($this->columnsRowClickDisabled) ?>;

var grid_<?php echo $this->gridId; ?> = $('#<?php echo $this->gridId; ?>').jqGrid({

	url: '<?php echo $url; ?>',

	caption: '<?php echo $this->title; ?>',

	height: 'auto',
	autowidth : true,
    forceFit : true,
    shrinkToFit : true,
    gridview : true,
    hoverrows : true,
    viewrecords : true,

    grouping: true,
//     multiSort: true,
    
    rowNum: <?php echo $this->paginator->getItemCountPerPage();?>,
    	    
	mtype : 'POST',
    postData: {
    	<?php echo $parameterNames['columnsHidden']?>: function(){
            return $('#<?php echo $this->gridId.'_'.$parameterNames['columnsHidden']; ?>').val();
        },
        <?php echo $parameterNames['columnsGroupByLocal']?>: function(){
            return $('#<?php echo $this->gridId.'_'.$parameterNames['columnsGroupByLocal']; ?>').val();
        }
        <?php
        if(count($parametersHtml) > 0){
            echo ',';
        }
        echo implode(',', $parametersHtml);
        ?>
    },
	
	
	sortname: '<?php echo $this->activeParameters[$parameterNames['sortColumns']]; ?>',
	sortorder: '<?php echo $this->activeParameters[$parameterNames['sortDirections']]; ?>',
	
	prmNames : {
		page: '<?php echo $parameterNames['currentPage']; ?>',
		rows: '<?php echo $parameterNames['itemsPerPage']; ?>',
		sort: '<?php echo $parameterNames['sortColumns']; ?>',
		order: '<?php echo $parameterNames['sortDirections']; ?>',
		search: '<?php echo $parameterNames['isSearch']; ?>',
	},
	
	pager : '#<?php echo $this->gridId; ?>_pager',

    colModel: <?php echo $this->jqgridColumns($this->columns); ?>,

    datatype : 'local',
    jsonReader : {
        repeatitems : false,
        id : 'idConcated'
    },

    <?php if($rowClickLink != ''): ?>
        onSelectRow: function(rowId, status, e){
            var rowClickLink = '<?php echo $rowClickLink; ?>';
            rowClickLink = rowClickLink.replace('<?php echo Button::ROW_ID_PLACEHOLDER; ?>', rowId);
            window.location.href = rowClickLink;
        },
    <?php endif; ?>

    beforeSelectRow: function (rowId, e) {
    	var colModel = grid_<?php echo $this->gridId; ?>.jqGrid('getGridParam','colModel');
    	var name = colModel[$.jgrid.getCellIndex(e.target)];

    	if (grid_<?php echo $this->gridId; ?>_columnsRowClickDisabled.indexOf(name.index) >= 0) {
            return false;
        }
        
        return true;
    }
});
<?php if($this->isUserFilterEnabled === true):?>
    grid_<?php echo $this->gridId; ?>.jqGrid('filterToolbar');
<?php endif; ?>

grid_<?php echo $this->gridId; ?>.jqGrid('setGridParam', {
    datatype : 'json'
}).trigger('reload');
grid_<?php echo $this->gridId; ?>.jqGrid()[0].addJSONData(<?php echo json_encode($this->data); ?>);
grid_<?php echo $this->gridId; ?>.trigger('reload');

//This is needed to load the data with ajax!
grid_<?php echo $this->gridId; ?>.jqGrid('setGridParam', {
    jsonReader : {
        repeatitems : false,
        id : 'idConcated',

        //The current page
        page : function(data) {
            if (data.data) {
                return data.data.page;
            }
        },

        records : function(data) {
            if (data.data) {
                return data.data.records;
            }
        },

        total : function(data) {
            if (data.data) {
                return data.data.total;
            }
        },

        //Data (rows)
        root : function(data) {
            if (data.data) {
                return data.data.rows;
            }
        }
    }
});
</script>
